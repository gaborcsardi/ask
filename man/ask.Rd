% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ask.R
\name{ask}
\alias{ask}
\title{Ask questions to the user, at the command line, and get the answers}
\usage{
ask(..., .prompt = green("[?] "))
}
\arguments{
\item{...}{Questions to ask, see details below.}

\item{.prompt}{Prompt to prepend to all questions. Defaults to
a green question mark in brackets.}
}
\value{
A named list with the answers.
}
\description{
Ask questions to the user, at the command line, and get the answers
}
\details{
Ask a series of questions to the user, and return all
results together in a list.

The \code{ask} function takes named arguments only:
\itemize{
  \item Each argument corresponds to a question to the user.
  \item The name of the argument is the identifier of the
    question, the answer will have the same name in the result list.
  \item Each argument is a function call. The name of the function
    is the type of the question. See question types below.
  \item Questions are asked in the order they are given. See
    \sQuote{Conditional execution} below for more flexible workflows.
}
}
\section{Question types}{

\describe{
  \item{input}{One line of text input.}
  \item{confirm}{A yes-no question, \sQuote{y} and \sQuote{yes}
    are considered as positive, \sQuote{n} and \sQuote{no} as negative
    answers (case insensitively).}
  \item{choose}{Choose one item form multiple items.}
  \item{checkbox}{Select multiple values from a list.}
}
}

\section{\sQuote{input} type}{

\preformatted{
  input(message, default = "", filter = NULL, validate = NULL,
        when = NULL)
}
\describe{
  \item{\code{message}}{The message to print.}
  \item{\code{default}}{The default vaue to return if the user just
    presses enter.}
  \item{\code{filter}}{If not \code{NULL}, then it must be a function,
    that is called to filter the entered result.}
  \item{\code{validate}}{If not \code{NULL}, then it must be a function
    that is called to validate the input. The function must return
    \code{TRUE} for valid inputs and an error message (character scalar)
    for invalid ones.}
  \item{\code{when}}{See \sQuote{Conditional execution} below.}
}
}

\section{\sQuote{confirm} type}{

\preformatted{
  confirm(message, default = TRUE, when = NULL)
}
\describe{
  \item{\code{message}}{The message to print.}
  \item{\code{default}}{The default answer if the user just presses
    enter.}
  \item{\code{when}}{See \sQuote{Conditional execution} below.}
}
}

\section{\sQuote{choose} type}{

\preformatted{
  choose(message, choices, default = NA, when = NULL)
}
\describe{
  \item{\code{message}}{Message to print.}
  \item{\code{choices}}{Possible choices, character vector.}
  \item{\code{default}}{Index of the default choice (if the user
    hits enter, or \code{NA} for no default.}
  \item{\code{when}}{See \sQuote{Conditional execution} below.}
}
}

\section{\sQuote{checkbox} type}{

\preformatted{
  checkbox(message, choices, when = NULL)
}
\describe{
  \item{\code{message}}{Message to print.}
  \item{\code{choices}}{Possible choices, character vector.}
  \item{\code{when}}{See \sQuote{Conditional execution} below.}
}
}

\section{Conditional execution}{

The \code{when} argument to a question can be used for conditional
execution of questions. If it is given (and not \code{NULL}), then
it must be a function. It is called with the answers list up to that
point, and it should return \code{TRUE} or \code{FALSE}. For \code{TRUE},
the question is shown to the user and the result is inserted into the
answer list. For \code{FALSE}, the question is not shown, and the
answer list is not chagned.
}
\examples{
\dontrun{
ask(
  name =  input("What is your name?"),
  cool = confirm("Are you cool?"),
  drink = choose("Select your poison!", c("Beer", "Wine")),
  language = checkbox("Favorite languages?", c("C", "C++", "Python", "R"))
)
}
}

